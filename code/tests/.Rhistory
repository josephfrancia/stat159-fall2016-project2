dev.off()
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-tv.pdf")
hist(data$TV)
dev.off()
#Sales Histogram
summary(data$Sales)
png(filename="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-sales.png")
hist(data$Sales)
dev.off()
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-sales.pdf")
hist(data$Sales)
dev.off()
#Sales and TV textfiles
sink(file="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/eda-output.txt")
summary(data$TV)
summary(data$Sales)
sink()
```{r cars, echo=FALSE}
load("/Users/josephfrancia/desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/regression.RData")
```
![Relationship Between TV Advertisements and Sales](/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/scatterplot-tv-sales.png)
Summary Table for Relevant Regression Statistics
```{r pressure, echo=FALSE}
print(reg_summary)
simulate_one=function(initial_bet, multiplier){
outcomes = c(rep(-1, 55), rep(1, 45))
outcome = sample(outcomes, size = 1)
if(outcome==1){
gain=initial_bet*multiplier
return(gain)
}
loss=initial_bet*multiplier*-1
return(loss)
}
simulate_turns = function(initial_bet, strategy, numBets) {
outcomes = c(rep(-1, 55), rep(1, 45))
multiplier=1
result=vector()
for(i in 1:numBets) {
result[i]=simulate_one(initial_bet, multiplier)
if(result[i]<0){
multiplier=strategy*multiplier
}
else{
multiplier=1
}
}
return((result))
}
#Extracting maximum amount of money you have to be willing to bet
catastrophic_loss=function(initial_bet, strategy, numBets, times){
dist=vector()
for(i in 1:times){
dist[i]=max(simulate_turns(1,2,100))
}
plot(dist)
}
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(5, 2, 100, 100)
catastrophic_loss(1, 2, 10, 100)
catastrophic_loss(1, 2, 10, 100)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
catastrophic_loss(1, 2, 10, 10)
data=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
#TV Histogram
tv_summary=summary(data$TV)
cat("TV Summary Statistics\n\n", file="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/eda-output.txt")
png(filename="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-tv.png")
hist(data$TV)
dev.off()
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-tv.pdf")
hist(data$TV)
dev.off()
#Sales Histogram
summary(data$Sales)
png(filename="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-sales.png")
hist(data$Sales)
dev.off()
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-sales.pdf")
hist(data$Sales)
dev.off()
#Sales and TV textfiles
sink(file="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/eda-output.txt")
summary(data$TV)
summary(data$Sales)
sink()
library(stargazer)
data=read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
reg_obj=lm(TV~Sales, data=data)
reg_summary=summary(reg_obj)
#Saving plot as png
png(filename="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/scatterplot-tv-sales.png")
plot(data$Sales, data$TV, main="Scatterplot with Regression Line", xlab="Sales", ylab="TV Advertisements")
abline(reg_obj)
dev.off()
#Saving plot as pdf
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/scatterplot-tv-sales.pdf")
plot(data$Sales, data$TV, main="Scatterplot with Regression Line", xlab="Sales", ylab="TV Advertisements")
abline(reg_obj)
dev.off()
save(data, reg_obj,reg_summary, file="/Users/josephfrancia/desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/regression.RData")
write.csv(data, file="/Users/josephfrancia/desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/Advertising.csv")
c("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/",args, sep="")
cat("3", "2")
cat("3", "2", sep="")
class(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data",lasjdfl;sj, sep=""))
class(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data","jlasdjf", sep=""))
reg_obj=lm(TV~Sales, data=data)
reg_summary=summary(reg_obj)
#Saving plot as png
png(filename="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/scatterplot-tv-sales.png")
plot(data$Sales, data$TV, main="Scatterplot with Regression Line", xlab="Sales", ylab="TV Advertisements")
abline(reg_obj)
dev.off()
#Saving plot as pdf
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/scatterplot-tv-sales.pdf")
plot(data$Sales, data$TV, main="Scatterplot with Regression Line", xlab="Sales", ylab="TV Advertisements")
abline(reg_obj)
dev.off()
save(data, reg_obj,reg_summary, file="/Users/josephfrancia/desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/regression.RData")
write.csv(data, file="/Users/josephfrancia/desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/Advertising.csv")
#TV Histogram
tv_summary=summary(data$TV)
cat("TV Summary Statistics\n\n", file="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/eda-output.txt")
png(filename="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-tv.png")
hist(data$TV)
dev.off()
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-tv.pdf")
hist(data$TV)
dev.off()
#Sales Histogram
summary(data$Sales)
png(filename="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-sales.png")
hist(data$Sales)
dev.off()
pdf("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/images/histogram-sales.pdf")
hist(data$Sales)
dev.off()
#Sales and TV textfiles
sink(file="/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/eda-output.txt")
summary(data$TV)
summary(data$Sales)
sink()
cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", c("Advertising.csv"), sep="")
cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")
z=cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")
read.csv(z)
read.csv(c("z"))
read.csv("z")
read.csv(z)
read.csv(z)
z
cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")
read.csv(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
read.csv(file=cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
read.csv(as.char(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/"), "Advertising.csv", sep=""))
read.csv(as.character(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/"), "Advertising.csv", sep=""))
read.csv("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/Advertising.csv")
read.csv(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")
)
read.csv(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
class(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
str(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
str(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
toString(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
toString(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))[1]
toString(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))[[1]
toString(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))[[1]]
toString(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
read.csv(toString(cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")))
read.csv(c("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
read.csv(c("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
read.csv(c("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv"))
c("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv")
cat("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv")
pasate("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")
paste("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")
paste("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep="")[1]
read.csv(paste("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw02/data/", "Advertising.csv", sep=""))
read.txt("https://piazza-resources.s3.amazonaws.com/isai0nn0zvc12j/itgbmkupc8q2g4/bodyfat_corrected.txt?AWSAccessKeyId=AKIAIEDNRLJ4AZKBW6HA&Expires=1477039259&Signature=JcR8kTdOz3%2BlsIZY64cHlNQtmlM%3D")
bodyfat=read.table(url(https://piazza-resources.s3.amazonaws.com/isai0nn0zvc12j/itgbmkupc8q2g4/bodyfat_corrected.txt?AWSAccessKeyId=AKIAIEDNRLJ4AZKBW6HA&Expires=1477039259&Signature=JcR8kTdOz3%2BlsIZY64cHlNQtmlM%3D))
bodyfat=read.table(url("https://piazza-resources.s3.amazonaws.com/isai0nn0zvc12j/itgbmkupc8q2g4/bodyfat_corrected.txt?AWSAccessKeyId=AKIAIEDNRLJ4AZKBW6HA&Expires=1477039259&Signature=JcR8kTdOz3%2BlsIZY64cHlNQtmlM%3D"))
View(bodyfat)
model=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH)
model=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH, data=bodyfat)
model=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH, data=bodyfat)
bodyfat=read.table(url("https://piazza-resources.s3.amazonaws.com/isai0nn0zvc12j/itgbmkupc8q2g4/bodyfat_corrected.txt?AWSAccessKeyId=AKIAIEDNRLJ4AZKBW6HA&Expires=1477039259&Signature=JcR8kTdOz3%2BlsIZY64cHlNQtmlM%3D"), header=FALSE)
View(bodyfat)
bodyfat=read.table(url("https://piazza-resources.s3.amazonaws.com/isai0nn0zvc12j/itgbmkupc8q2g4/bodyfat_corrected.txt?AWSAccessKeyId=AKIAIEDNRLJ4AZKBW6HA&Expires=1477039259&Signature=JcR8kTdOz3%2BlsIZY64cHlNQtmlM%3D"), header=TRUE)
View(bodyfat)
model=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH, data=bodyfat)
plot(model)
plot(model, which=2)
plot(model, which=3)
plot(model, which=4)
plot(model, which=5)
plot(model, which=1)
plot(model, which=3)
plot(model, which=2)
plot(model, which=4)
plot(model, which=5)
plot(model)
summary(model)
names(summary(model))
names(model)
rstandard
?rstandard
install.packages("MASS")
library(MASS)
standard_res=stdres(model)
standard_res
names(model)
plot(model$residuals, standard_res)
plot(model, which=4)
plot(model, which=1)
plot(model, which=2)
plot(model, which=3)
plot(model, which=4)
plot(model, which=5)
plot(model, which=4)
plot(model, which=3)
standard_res=stdres(model)
plot(model$residuals, standard_res)
plot(model$residuals, standard_res)
plot(model, which=3)
plot(model, which=1)
plot(model, which=4)
plot(model, which=5)
plot(model, which=5)
head(bodyfat)
head(bodyfat[-2,])
head(bodyfat[-1,])
head(bodyfat[-2,])
model=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH, data=bodyfat[-2,])
pred(model,bodyfat[2,])
predict(model,bodyfat[2,])
bodyfat[2,"BODYFAT"]-pred
pred=predict(model,bodyfat[2,])
bodyfat[2,"BODYFAT"]-pred
summary(model)
names(model)
pred_resid=vector()
for(i in 1:nrow(bodyfat)){
model=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH, data=bodyfat[-i,])
pred=predict(model,bodyfat[2,])
pred_resid[i]=bodyfat[i,"BODYFAT"]-pred
}
plot(pred_resid,model$fitted.values)
model=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH, data=bodyfat)
length(model$fitted.values)
length(pred_resid)
pred_resid=vector()
for(i in 1:nrow(bodyfat)){
model_dummy=lm(BODYFAT~AGE+WEIGHT+HEIGHT+THIGH, data=bodyfat[-i,])
pred=predict(model,bodyfat[2,])
pred_resid[i]=bodyfat[i,"BODYFAT"]-pred
}
plot(pred_resid,model$fitted.values)
plot(model$fitted.values, pred_resid)
plot(model$fitted.values, pred_resid, ylab="Predicted Residuals", xlab="Fitted Values")
plot(model$residuals, pred_resid, ylab="Residuals", xlab="Predicted Residiuals")
?studres
plot(pred_resid, studres(model), ylab="Predicted Residuals", xlab="Standardized Predicted Residuals")
?plot()
{r H}
plot(stdres(model), studres(model), xlab="Standardized Residuals", ylab="Standardized Predicted Residuals")
plot(model, which=3)
plot(model$residuals, standard_res)
plot(pred_resid, studres(model), ylab="Predicted Residuals", xlab="Standardized Predicted Residuals")
plot(studres(model), stdres(model), ylab="Standardized Residuals", xlab="Standardized Predicted Residuals")
plot(model, which=5)
plot(pred_resid, model$residuals,ylab="Residuals", xlab="Predicted Residiuals")
plot(model, which=3)
plot(model, which=1)
plot(stdres(model))
model
summary(model)
abs_jacknife=abs(stdres(model))
p_vals=pt(abs_jacknife, 247, lower.tail=FALSE)
p_vals
which(p_vals<.05)
p_vals
p_vals=pt(abs_jacknife, 247, lower=FALSE)
which(p_vals<.05)
p_vals
class(p_vals)
plot(p_vals)
.05/252
which(p_vals<.05/nrow(bodyfat))
data=read.csv("/Users/josephfrancia/Desktop/PS3q8")
data=read.csv("/Users/josephfrancia/Desktop/PS3q8.csv")
View(data)
china_cpi=data[9,]/data[9,6]
china_cpi=as.numeric(data[9,])/as.numeric(data[9,6])
us_cpi=as.numeri(data[16,6])/as.numeric(data[16,6])
us_cpi=as.numeric(data[16,6])/as.numeric(data[16,6])
p_ratio_china=us_cpi/china_cpi
RER=as.numeric(data[8,])*p_ratio_china
gdp_china=as.numeric(data[10,])/as.numeri(data[10,6])
gdp_china=as.numeric(data[10,])/as.numeric(data[10,6])
plot(gdp_china, RER_china)
RER_china=as.numeric(data[8,])*p_ratio_china
plot(gdp_china, RER_china)
plot(RER_china, gdp_china)
plot(gdp_china, RER_china)
plot(gdp_china, RER_china, xlab="China's GDP", ylab="China's RER", main="Relationship between Real Exchange Rate and GDP in China")
RER_china
RER_china
brazil_cpi=as.numeric(data[2,])/as.numeric(data[2,6])
p_ratio_brazil=us_cpi/brazil_cpi
gdp_brazil=as.numeric(data[3,])/as.numeric(data[3,6])
RER_brazil=as.numeric(data[1,])*p_ratio_brazil
plot(gdp_brazil, RER_brazil, xlab="Brazil's GDP", ylab="Brazil's RER", main="Relationship between Real Exchange Rate and GDP in Brazil")
x=1:3
z=c(300000000, 2000000000, 4500000000)
plot(x,z)
data=read.csv("/Users/josephfrancia/Desktop/PS3q8.csv")
china_cpi=as.numeric(data[9,])/as.numeric(data[9,6])
us_cpi=as.numeric(data[16,6])/as.numeric(data[16,6])
p_ratio_china=us_cpi/china_cpi
gdp_china=as.numeric(data[10,])/as.numeric(data[10,6])
RER_china=as.numeric(data[8,])*p_ratio_china
plot(gdp_china, RER_china, xlab="China's GDP", ylab="China's RER", main="Relationship between Real Exchange Rate and GDP in China")
brazil_cpi=as.numeric(data[2,])/as.numeric(data[2,6])
p_ratio_brazil=us_cpi/brazil_cpi
gdp_brazil=as.numeric(data[3,])/as.numeric(data[3,6])
RER_brazil=as.numeric(data[1,])*p_ratio_brazil
plot(gdp_brazil, RER_brazil, xlab="Brazil's GDP", ylab="Brazil's RER", main="Relationship between Real Exchange Rate and GDP in Brazil")
View(data)
plot(RER_brazil, brazil_bal)
brazil_bal=as.numeric(data[5,])-as.numeric(data[6,])
china_bal=as.numeric(data[12,])-as.numeric(data[13,])
plot(RER_brazil, brazil_bal)
?plot
plot(brazil_bal, RER_brazil)
plot(china_bal, RER_china, xlab="China Balance of Trade", ylab="China's Real Exchange Rate")
brazil_cpi
as.numeric(data[2,6])
as.numeric(data[2,6])/as.numeric(data[2,6])
as.numeric(data[2,])
ncol(data)
data=read.csv("/Users/josephfrancia/Desktop/PS3q8.csv")
data1=data[,5:31]
china_cpi=as.numeric(data1[9,])/as.numeric(data1[9,6])
us_cpi=as.numeric(data1[16,6])/as.numeric(data1[16,6])
p_ratio_china=us_cpi/china_cpi
gdp_china=as.numeric(data1[10,])/as.numeric(data1[10,6])
RER_china=as.numeric(data1[8,])*p_ratio_china
plot(gdp_china, RER_china, xlab="China's GDP", ylab="China's RER", main="Relationship between Real Exchange Rate and GDP in China")
brazil_cpi=as.numeric(data1[2,])/as.numeric(data1[2,6])
p_ratio_brazil=us_cpi/brazil_cpi
gdp_brazil=as.numeric(data1[3,])/as.numeric(data1[3,6])
RER_brazil=as.numeric(data1[1,])*p_ratio_brazil
plot(gdp_brazil, RER_brazil, xlab="Brazil's GDP", ylab="Brazil's RER", main="Relationship between Real Exchange Rate and GDP in Brazil")
brazil_bal=as.numeric(data1[5,])-as.numeric(data1[6,])
china_bal=as.numeric(data1[12,])-as.numeric(data1[13,])
plot(brazil_bal, RER_brazil, xlab="Brazil Balance of Trade", ylab="Brazil's Real Exchange Rate")
plot(china_bal, RER_china, xlab="China Balance of Trade", ylab="China's Real Exchange Rate")
plot(brazil_bal, RER_brazil, xlab="Brazil Balance of Trade", ylab="Brazil's Real Exchange Rate")
plot(gdp_brazil, RER_brazil, xlab="Brazil's GDP", ylab="Brazil's RER", main="Relationship between Real Exchange Rate and GDP in Brazil")
plot(gdp_china, RER_china, xlab="China's GDP", ylab="China's RER", main="Relationship between Real Exchange Rate and GDP in China")
plot(gdp_brazil, RER_brazil, xlab="Brazil's GDP", ylab="Brazil's RER", main="Relationship between Real Exchange Rate and GDP in Brazil")
plot(gdp_brazil, RER_brazil, xlab="Brazil's GDP", ylab="Brazil's RER", main="Relationship between Real Exchange Rate and GDP in Brazil")
fdi_brazil=data1[7,]
plot(fdi_brazil, RER_brazil)
plot(fdi_brazil, RER_brazil)
fdi_brazil
class(data1)
fdi_brazil=as.numeric(data1[7,])
fdi_china=as.numeric(data1[14,])
plot(fdi_brazil, RER_brazil)
plot(fdi_china, RER_china)
View(data1)
plot(china_bal,gdp_china)
lines(fdi_china)
lines(RER_china)
plot(china_bal,gdp_china)
plot(china_bal[22:24],gdp_china[22:24])
lines(fdi_china[22:24])
lines(RER_china[22:24])
plot(gdp_china, 1:length(gdp_china))
gdp_china
plot(fdi_china, RER_china, xlab="China's FDI", ylab="China's Real Exchange Rate", main="China")
processed=read.csv("../../data/scaled-credit.csv")
setwd("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-project2/code/scripts")
processed=read.csv("../../data/scaled-credit.csv")
View(processed)
processed=processed[,-c(1,2)]
trainset=function(data){
set.seed(0)
shuffled_ind=sample(1:400, 400)
train=data[shuffled_ind[1:300],]
}
testset=function(data){
set.seed(0)
shuffled_ind=sample(1:400, 400)
test=data[shuffled_ind[301:400],]
}
View(test)
trainset=function(data){
set.seed(0)
shuffled_ind=sample(1:400, 400)
train=data[shuffled_ind[1:300],]
return(train)
}
testset=function(data){
set.seed(0)
shuffled_ind=sample(1:400, 400)
test=data[shuffled_ind[301:400],]
return(test)
}
testset(processed)
View(testset(processed))
testset(processed)[1,]
testset(processed)[,1]
shuffled_ind[301:400] %in% shuffled_ind[1:300]
set.seed(0)
shuffled_ind=sample(1:400, 400)
set.seed(0)
shuffled_ind=sample(1:400, 400)
shuffled_ind[301:400] %in% shuffled_ind[1:300]
sum(shuffled_ind[301:400] %in% shuffled_ind[1:300])
sum(shuffled_ind[1:300] %in% shuffled_ind[301:400])
library(testthat)
source("../functions/regression-functions.R")
processed=read.csv("../../data/scaled-credit.csv")
processed=processed[,-c(1,2)]
(testthat)
source("../functions/test_set.R")
source("../functions/training_set.R")
#setwd("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-project2/code/scripts")
processed=read.csv("../../data/scaled-credit.csv")
processed=processed[,-c(1,2)]
trainset=function(data){
set.seed(0)
shuffled_ind=sample(1:400, 400)
train=data[shuffled_ind[1:300],]
return(train)
}
train=trainset(processed)
save(train, file="../../data/train.RData")
#setwd("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-project2/code/scripts")
processed=read.csv("../../data/scaled-credit.csv")
processed=processed[,-c(1,2)]
testset=function(data){
set.seed(0)
shuffled_ind=sample(1:400, 400)
test=data[shuffled_ind[301:400],]
return(test)
}
test=testset(processed)
save(test, file="../../data/test.RData")
library(testthat)
source("../functions/test_set.R")
source("../functions/train_set.R")
processed=read.csv("../../data/scaled-credit.csv")
processed=processed[,-c(1,2)]
context("Train and Test")
test_that("Making sure there's no overlap between test and training sets", {
expect_equal(sum(trainset(processed) %in% testset(processed)), 0	)
})
test_file("tests/tests.R")
test_file("tests.R")
test_file("tests.R")
setwd("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-hw03/code/tests")
test_file("tests.R")
setwd("/Users/josephfrancia/Desktop/Fall_2016/Stats159/stat159-fall2016-project2/code/tests")
test_file("tests.R")
sum(trainset(processed) %in% testset(processed))
sum(trainset(processed) %in% testset(processed))
sum(trainset(processed)==trainset(processed)
)
sum(trainset(processed)==trainset(processed)==FALSE)
sum((trainset(processed)==trainset(processed))==FALSE)
test_file("tests.R")
